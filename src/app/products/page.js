"use client";

import { useState, useEffect } from 'react';
import Head from 'next/head';
import Modal from '@/components/Modal';
import CustomToast from '@/components/CustomToast';
import { IconTrendingUp, IconShoppingBag } from '@tabler/icons-react';
import { auth } from '@/api/firebase'; // Import your firebase auth

export default function Home() {
    const products = [
        { name: 'Tea', image: '/path/to/tea-image.png', price: 1250, buyers: 1250, category: 'Raw Commodities', discount: true },
        { name: 'Coffee', image: '/path/to/coffee-image.png', price: 1500, buyers: 500, category: 'Raw Commodities', discount: false },
        { name: 'Gold', image: '/path/to/gold-image.png', price: 2000, buyers: 100, category: 'Precious Metals', discount: true },
        { name: 'Silver', image: '/path/to/silver-image.png', price: 800, buyers: 300, category: 'Precious Metals', discount: false },
        { name: 'Coal', image: '/path/to/coal-image.png', price: 1200, buyers: 400, category: 'Fossil Fuels', discount: true },
        { name: 'Charcoal', image: '/path/to/charcoal-image.png', price: 300, buyers: 200, category: 'Fossil Fuels', discount: false },
    ];

    const [user, setUser] = useState(null);
    const [cartItems, setCartItems] = useState(0);
    const [selectedProducts, setSelectedProducts] = useState([]);
    const [showModal, setShowModal] = useState(false);
    const [showToast, setShowToast] = useState(false);
    const [toastMessage, setToastMessage] = useState('');

    useEffect(() => {
        const storedCartItems = JSON.parse(localStorage.getItem('cartItems'));
        if (storedCartItems) {
            setSelectedProducts(storedCartItems);
            setCartItems(storedCartItems.length);
        }

        const unsubscribe = auth.onAuthStateChanged((user) => {
            setUser(user);
        });
        return () => unsubscribe();
    }, []);

    useEffect(() => {
        localStorage.setItem('cartItems', JSON.stringify(selectedProducts));
    }, [selectedProducts]);

    const increaseCartItems = () => setCartItems(cartItems + 1);

    const addToCartItem = (index) => {
        const product = products[index];
        setSelectedProducts([...selectedProducts, product]);
        setToastMessage(`${product.name} added to cart!`);
        setShowToast(true);
        setTimeout(() => {
            setShowToast(false);
        }, 3000); // Hide toast after 3 seconds
    };

    const handleAddToCartAndIncrease = (index) => {
        addToCartItem(index);
        increaseCartItems();
    };

    const checkoutCart = () => {
        if (selectedProducts.length === 0) {
            alert('Cart is empty');
        } else {
            setShowModal(true);
        }
    };

    return (
        <div className='px-4 md:px-0'>
            <Head>
                <title>Home Page</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className="container mx-auto py-6">
                <div className='md:flex md:justify-between mb-4 md:mb-0'>
                    <div>
                        <h1 className="text-3xl font-bold">Good Morning,</h1>
                        <p className="text-lg mt-2 mb-4">Find products for you</p>
                    </div>
                    <div>
                        <button id='button-1' className="bg-blue-950 text-white py-3 px-8 rounded flex gap-3" onClick={checkoutCart}>
                            <IconShoppingBag stroke={2} />Checkout ({cartItems})
                        </button>
                    </div>
                </div>

                <Modal showModal={showModal} setShowModal={setShowModal} selectedProducts={selectedProducts} title="Cart Details" email={user?.email} />
                {showToast && <CustomToast message={toastMessage} onDismiss={() => setShowToast(false)} />}

                <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
                    {products.map((product, index) => (
                        <div key={index} className="border rounded-lg hover:shadow-lg ease-in-out duration-300 overflow-hidden relative">
                            <div className="bg-blue-500 w-full h-32 relative">
                                {product.discount && (
                                    <div className="absolute top-4 left-4 bg-white bg-opacity-30 text-white px-2 py-1 rounded-lg backdrop-filter backdrop-blur-md">
                                        Discount!
                                    </div>
                                )}
                            </div>
                            <div className="p-4">
                                <div className="flex justify-between">
                                    <h3 className="text-lg font-semibold">{product.name}</h3>
                                    <p className={`text-base font-semibold ${product.price > 1000 ? 'text-green-600' : 'text-red-600'}`}>
                                        ${product.price}<span className='text-[12px]'>/kg</span>
                                    </p>
                                </div>
                                <div className="flex justify-between">
                                    <p className="text-sm text-gray-600 flex">{product.buyers.toLocaleString()} buyers {product.price > 1000 && <IconTrendingUp size={18} className='ml-1 items-center text-green-500 hover' />}
                                    </p>
                                    <p className="text-sm text-gray-600">{product.category}</p>
                                </div>
                                <button
                                    className="mt-4 w-full bg-black text-white py-2 px-4 rounded cursor-pointer"
                                    onClick={() => handleAddToCartAndIncrease(index)}>
                                    Add to Cart
                                </button>
                            </div>
                        </div>
                    ))}
                </div>
            </main>
        </div>
    );
}
